class Solution:
	def reorderedPowerOf2(self, N: int) -> bool:
		n = "".join(sorted(str(N)))
		for i in range(30):
			if n == "".join(sorted(str(2**i))):
				return True
		return False
    
    
###################################################################
class Solution:
		def reorderedPowerOf2(self, N: int) -> bool:
			ans= [['1'],
				 ['2'],
				 ['4'],
				 ['8'],
				 ['1', '6'],
				 ['2', '3'],
				 ['4', '6'],
				 ['1', '2', '8'],
				 ['2', '5', '6'],
				 ['1', '2', '5'],
				 ['0', '1', '2', '4'],
				 ['0', '2', '4', '8'],
				 ['0', '4', '6', '9'],
				 ['1', '2', '8', '9'],
				 ['1', '3', '4', '6', '8'],
				 ['2', '3', '6', '7', '8'],
				 ['3', '5', '5', '6', '6'],
				 ['0', '1', '1', '2', '3', '7'],
				 ['1', '2', '2', '4', '4', '6'],
				 ['2', '2', '4', '5', '8', '8'],
				 ['0', '1', '4', '5', '6', '7', '8'],
				 ['0', '1', '2', '2', '5', '7', '9'],
				 ['0', '1', '3', '4', '4', '4', '9'],
				 ['0', '3', '6', '8', '8', '8', '8'],
				 ['1', '1', '2', '6', '6', '7', '7', '7'],
				 ['2', '3', '3', '3', '4', '4', '5', '5'],
				 ['0', '1', '4', '6', '6', '7', '8', '8'],
				 ['1', '1', '2', '2', '3', '4', '7', '7', '8'],
				 ['2', '3', '4', '4', '5', '5', '6', '6', '8'],
				 ['0', '1', '2', '3', '5', '6', '7', '8', '9']]
			return sorted(str(N)) in ans
